# Mais de 2 dimensoes
lista_char = list('A', 'B', 'C')
lista_char
lista_mista = list(c('X', 'Y'), 'B', 'C')
lista_mista
lista_mult = list(matrix(c('A', 'B', 'C', 'D'), nr = 2), 'B', 'C')
lista_mult
# lista de tipos basicos
lista_inteiros = list(1,2,3)
lista_inteiros
lista_logicos = list(T,F,TRUE,FALSE)
lista_logicos
lista_composta = list("A", 40, T)
lista_composta
# Slicing
lista_composta[1]
lista_composta[[2]][1]
lista_composta[[2]][1] = 41
lista_composta[[2]][1]
# Nomear itens na lista
names(lista_composta) <- c("Nome", "Idade", "Homem")
lista
lista_composta
lista_composta[["Nome"]]
vec_num = 1:4
vec_char = c("A", "B", "C", "D")
lista_nomeada <- list(Numeros = vec_num, Letras = vec_char)
lista_nomeada
lista_nomeada$Numeros
lista_nomeada$Numeros[2]
mode(lista_nomeada$Numeros)
mode(lista_nomeada$Letras)
# Combinando listas
combinada = c(lista_composta, lista_nomeada)
combinada
texto = "Isso é uma string"
texto
x = as.character(3.14)
x
class(x)
nome = "Nelson"; sobrenome = "Mandela"
paste(nome, sobrenome)
cat(nome, sobrenome)
sprintf("Código %s está dentro do range %s", 10, "F")
substr(texto, start = 12, stop = 17)
substr(texto, start = 8, stop = 17)
nchar(texto)
tolower(texto)
toupper(texto)
library(stringr)
strsplit(texto, null)
strsplit(texto, NULL)
str_count(texto, 's')
#Localização
str_locate_all(texto, 's')
str_replace(texto, "\\s", "")
str_remove_all(texto, "\\s", "")
str_replace_all(texto, "\\s", "")
grepl(pattern = pattern, x = data1)
pattern = jan20
grepl(pattern = pattern, x data1)
# Busca de padrao
data1 = "17 jan 2001"
data2 = "15 jan 2001"
pattern = "jan 20"
grepl(pattern = pattern, x = data1)
pattern = jan20
grepl(pattern = pattern, x data1)
pattern = "jan20"
grepl(pattern = pattern, x = data1)
df = data.frame()
class(df)
# Vetores vazios
nomes = character()
idades = numeric()
itens = integer()
codigos = character()
df = data.frame(c(nomes, idades, itens, codigos))
df
paises = c("Portugal", "Inglaterra", "Irlanda", "Egito", "Brasil")
altura = c(1.88, 1.76, 1.53, 1.69, 1.68)
codigo = c("5001", "2183", "A-1567", "3345")
pesquisa = data.frame(pais, nome, altura, codigo)
paises = c("Portugal", "Inglaterra", "Irlanda", "Egito", "Brasil")
nome = c("Bruno", "Tiago", "Amanda", "Bianca", "Marta")
altura = c(1.88, 1.76, 1.53, 1.69, 1.68)
codigo = c("5001", "2183", "A-1567", "3345")
pesquisa = data.frame(paises, nome, altura, codigo)
codigo = c("5001", "2183", "A-1567", "3345", "xxxxx")
pesquisa = data.frame(paises, nome, altura, codigo)
pesquisa
str(pesquisa)
dim(pesquisa)
length(pesquisa)
pesquisa$paises
pesquisa[3, 2]
nrow(pes)
nrow(pesquisa)
ncol(pesquisa)
head(pesquisa)
tail(pes)
tail(pesquisa)
head(mtcars)
tail(mtcars)
View(mtcars)
pesquisa[altura > 1.7]
pesquisa[altura > 1.7,]
colnames(pesquisa) <- c("Var 1", "Var 2", "Var 3", "Var 4", "Var 5")
colnames(pesquisa) <- c("Var 1", "Var 2", "Var 3", "Var 4")
pesquisa
rownames(pesquisa) <- c("Obs 1", "Obs 2", "Obs 3", "Obs 4")
rownames(pesquisa) <- c("Obs 1", "Obs 2", "Obs 3", "Obs 4", "Obs 5")
pesquisa
pesquisa[["Obs 1"]]
pesquisa["Obs 1"]
pacientes = data.frame(read.csv(file = 'pacientes.csv'), header = T, sep = ",")
# Manipulação de dataframes
getwd()
# Manipulação de dataframes
setwd("/home/anderson.zanichelli/workspace/datascience/r/rstudio/basico")
getwd()
pacientes = data.frame(read.csv(file = 'pacientes.csv'), header = T, sep = ",")
View(pacientes)
head(pacientes)
summary(pacientes)
str(pacientes)
pacientes = data.frame(read.csv(file = 'pacientes.csv'), header = T)
View(pacientes)
pacientes = data.frame(read.csv(file = 'pacientes.csv'))
View(pacientes)
head(pacientes)
summary(pacientes)
summary(pacientes)
pacientes$Diabete
hist(pacientes$Idade)
dataset_final = merge(pesquisa, pacientes)
dataset_final
